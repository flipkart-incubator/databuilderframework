package com.flipkart.databuilderframework.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.flipkart.databuilderframework.engine.DataSetAccessor;
import com.flipkart.databuilderframework.engine.Utils;
import com.google.common.collect.Maps;
import org.hibernate.validator.constraints.NotEmpty;

import javax.validation.constraints.NotNull;
import java.io.Serializable;
import java.util.Map;

/**
 * Working set for data
 * Contains all the data that has been provided by the system as well as those generated by the system.
 */
public class DataSet implements Serializable {

    private static final long serialVersionUID = -7453209452035943145L;
    /**
     * All data present for this flow execution.
     */
    @NotNull
    @NotEmpty
    @JsonProperty
    private Map<String,Data> availableData;

    public DataSet() {
        this.availableData = Maps.newHashMap();
    }

    public DataSet(Map<String, Data> availableData) {
        this.availableData = availableData;
    }

    public DataSet add(String dataName, Data data) {
        this.availableData.put(dataName, data);
        return this;
    }

    public<T extends Data> DataSet add(T data) {
        this.availableData.put(Utils.name(data.getClass()), data);
        return this;
    }

    public Map<String, Data> getAvailableData() {
        return availableData;
    }

    public void setAvailableData(Map<String, Data> availableData) {
        this.availableData = availableData;
    }

    public static DataSetAccessor accessor(DataSet dataSet) {
        return new DataSetAccessor(dataSet);
    }

    public DataSetAccessor accessor() {
        return new DataSetAccessor(this);
    }
}
